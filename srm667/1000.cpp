#include<iostream>
#include<string>
#include<vector>
#include<limits>

using namespace std;

#define REP(k, i) for(int i = 0; i < k; i++)
#define REPI(k, i, j) for(int i = j; i < k; i++)
#define PRL(a) cout<<a<<endl;
#define PR(a) cout<<a<<" ";

class ShopPositions {
    int n;
    int m;
    vector<int> c;
public:
    int maxProfit(int, int, vector<int>);
    int C(int x, int y) {
        if(y == 0)
            return 0;
        return c[x*3*m+y-1];
    }
};

int ShopPositions::maxProfit(int n, int m, vector<int> c) {
    this->n = n;
    this->m = m;
    this->c = c;

    int csz = n*m*3;
    int **profit_mat = new int*[n];
    int **cnt_mat    = new int*[n];
    int **tot_mat = new int*[n];
    REP(n, i) {
        profit_mat[i]     = new int[m+1];
        cnt_mat[i] = new int[m+1];
        tot_mat[i] = new int[m+1]; 
        int j = 0;
        REP(m+1, j) {
            profit_mat[i][j]    = 0;
            cnt_mat[i][j]       = 0;
            tot_mat[i][j]       = 0;
        }
    }
    REP(m+1, i) {
        profit_mat[0][i] = i*C(0, i);
        cnt_mat[0][i]    = i;
        tot_mat[0][i]    = i;
    }

    for(int i = 1; i < n; i++) {
        for(int j = 0; j < m+1; j++) {
            profit_mat[i][j] = 0;
            for(int k = 0; k < m+1; k++) {
                int new_profit = profit_mat[i-1][k] - cnt_mat[i-1][k]*C(i-1, tot_mat[i-1][k]) + (cnt_mat[i-1][k])*C(i-1, tot_mat[i-1][k]+j) + j*C(i, cnt_mat[i-1][k]+j);
                if(profit_mat[i][j] < new_profit) {
                    profit_mat[i][j] = new_profit;
                    cnt_mat[i][j]    = j;
                    tot_mat[i][j]    = j+k;
                }
            }
        }
    }

    int max_profit = 0;
    for(int i = 0; i < m+1; i++) {
        PR(profit_mat[n-1][i]);
        PR(tot_mat[n-1][i]);
        PRL(i);
        if(profit_mat[n-1][i] > max_profit) {
            max_profit = profit_mat[n-1][i];
        }
    }
    return max_profit;
}

//{21, 7, {954, 874, 855, 843, 820, 766, 732, 712, 690, 678, 677, 658, 604, 400, 362, 356, 344, 222, 202, 152, 29, 922, 871, 868, 812, 793, 757, 736, 713, 686, 649, 578, 555, 502, 405, 241, 219, 211, 203, 167, 65, 35, 987, 968, 922, 825, 738, 734, 733, 703, 698, 665, 609, 573, 543, 521, 478, 409, 381, 309, 87, 84, 62, 919, 911, 866, 787, 758, 737, 735, 622, 606, 514, 507, 489, 439, 392, 380, 217, 140, 78, 63, 63, 51, 975, 951, 912, 891, 856, 824, 721, 696, 647, 564, 538, 522, 509, 502, 428, 413, 351, 261, 133, 126, 82, 980, 954, 845, 816, 666, 659, 514, 490, 486, 444, 426, 421, 376, 353, 312, 309, 238, 204, 120, 90, 25, 937, 919, 864, 855, 782, 672, 566, 547, 514, 452, 442, 431, 340, 304, 239, 202, 159, 128, 39, 36, 27, 968, 859, 793, 730, 727, 668, 666, 653, 620, 612, 575, 525, 434, 372, 368, 240, 206, 202, 193, 129, 62, 999, 958, 885, 883, 771, 764, 652, 633, 595, 570, 474, 465, 428, 416, 404, 394, 383, 228, 165, 80, 61, 991, 693, 676, 647, 608, 520, 427, 388, 360, 349, 331, 325, 319, 303, 291, 145, 140, 109, 107, 85, 31, 864, 798, 790, 747, 708, 608, 559, 553, 553, 466, 258, 257, 155, 142, 102, 88, 86, 51, 26, 21, 16, 967, 910, 834, 785, 778, 769, 765, 738, 725, 593, 563, 555, 533, 473, 330, 322, 312, 285, 268, 202, 139, 997, 965, 958, 862, 818, 747, 742, 707, 680, 636, 533, 523, 520, 499, 498, 495, 479, 470, 249, 112, 12, 815, 785, 744, 693, 644, 610, 593, 531, 453, 450, 440, 422, 257, 225, 200, 171, 135, 123, 114, 67, 22, 963, 942, 913, 908, 895, 868, 823, 771, 518, 510, 508, 448, 407, 370, 336, 298, 219, 203, 128, 81, 52, 960, 815, 800, 790, 785, 746, 701, 689, 678, 496, 455, 328, 275, 271, 227, 224, 212, 172, 150, 116, 105, 918, 892, 887, 754, 745, 726, 666, 637, 542, 443, 399, 381, 375, 362, 350, 306, 272, 257, 213, 153, 112, 974, 964, 886, 865, 813, 764, 755, 615, 568, 520, 495, 495, 472, 438, 347, 307, 303, 271, 127, 125, 116, 795, 791, 693, 653, 652, 588, 561, 486, 405, 394, 355, 306, 260, 184, 172, 167, 129, 108, 51, 36, 27, 939, 877, 740, 707, 676, 574, 571, 514, 485, 435, 414, 360, 297, 284, 251, 241, 218, 101, 86, 60, 48, 994, 917, 868, 828, 697, 664, 588, 580, 557, 518, 431, 408, 403, 399, 309, 306, 267, 220, 195, 102, 56}}
//51733
int main() {
    ShopPositions s;
    int n = 21;
    int m = 7;
    //int arr[] = {100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 1, 1, 1, 1, 1};
    //int arr[] = {1000, 5, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
    //int arr[] = {7, 6, 1, 10, 4, 1, 7, 6, 3};
    int arr[] = {954, 874, 855, 843, 820, 766, 732, 712, 690, 678, 677, 658, 604, 
        400, 362, 356, 344, 222, 202, 152, 29, 922, 871, 868, 812, 793, 757, 736, 
        713, 686, 649, 578, 555, 502, 405, 241, 219, 211, 203, 167, 65, 35, 987, 
        968, 922, 825, 738, 734, 733, 703, 698, 665, 609, 573, 543, 521, 478, 409, 
        381, 309, 87, 84, 62, 919, 911, 866, 787, 758, 737, 735, 622, 606, 514, 507,
        489, 439, 392, 380, 217, 140, 78, 63, 63, 51, 975, 951, 912, 891, 856, 824,
        721, 696, 647, 564, 538, 522, 509, 502, 428, 413, 351, 261, 133, 126, 82, 
        980, 954, 845, 816, 666, 659, 514, 490, 486, 444, 426, 421, 376, 353, 312, 
        309, 238, 204, 120, 90, 25, 937, 919, 864, 855, 782, 672, 566, 547, 514, 
        452, 442, 431, 340, 304, 239, 202, 159, 128, 39, 36, 27, 968, 859, 793, 730,
        727, 668, 666, 653, 620, 612, 575, 525, 434, 372, 368, 240, 206, 202, 193, 
        129, 62, 999, 958, 885, 883, 771, 764, 652, 633, 595, 570, 474, 465, 428, 
        416, 404, 394, 383, 228, 165, 80, 61, 991, 693, 676, 647, 608, 520, 427, 
        388, 360, 349, 331, 325, 319, 303, 291, 145, 140, 109, 107, 85, 31, 864, 798, 790, 747, 708, 608, 559, 553, 553, 466, 258, 257, 155, 142, 102, 88, 86, 51, 26, 21, 16, 967, 910, 834, 785, 778, 769, 765, 738, 725, 593, 563, 555, 533, 473, 330, 322, 312, 285, 268, 202, 139, 997, 965, 958, 862, 818, 747, 742, 707, 680, 636, 533, 523, 520, 499, 498, 495, 479, 470, 249, 112, 12, 815, 785, 744, 693, 644, 610, 593, 531, 453, 450, 440, 422, 257, 225, 200, 171, 135, 123, 114, 67, 22, 963, 942, 913, 908, 895, 868, 823, 771, 518, 510, 508, 448, 407, 370, 336, 298, 219, 203, 128, 81, 52, 960, 815, 800, 790, 785, 746, 701, 689, 678, 496, 455, 328, 275, 271, 227, 224, 212, 172, 150, 116, 105, 918, 892, 887, 754, 745, 726, 666, 637, 542, 443, 399, 381, 375, 362, 350, 306, 272, 257, 213, 153, 112, 974, 964, 886, 865, 813, 764, 755, 615, 568, 520, 495, 495, 472, 438, 347, 307, 303, 271, 127, 125, 116, 795, 791, 693, 653, 652, 588, 561, 486, 405, 394, 355, 306, 260, 184, 172, 167, 129, 108, 51, 36, 27, 939, 877, 740, 707, 676, 574, 571, 514, 485, 435, 414, 360, 297, 284, 251, 241, 218, 101, 86, 60, 48, 994, 917, 868, 828, 697, 664, 588, 580, 557, 518, 431, 408, 403, 399, 309, 306, 267, 220, 195, 102, 56};
    vector<int> c(arr, arr+sizeof(arr)/sizeof(int));
    cout<<s.maxProfit(n, m, c)<<endl;
    return 0;
}
